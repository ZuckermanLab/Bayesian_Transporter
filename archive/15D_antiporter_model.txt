  
// Created by libAntimony v2.12.0
model transporter_full()

// Compartments and Species:
compartment vol;
species OF in vol, OF_Hb in vol;
species IF_Hb in vol, IF_Hb_Sb in vol;
species IF_Sb in vol, OF_Sb in vol;
species H_in in vol, S_in in vol;
species $H_out in vol, $S_out in vol;
species OF_Hb_Sb in vol;

// Reactions:
rxn1: OF + $H_out -> OF_Hb; vol*(k1_f*OF*H_out - k1_r*OF_Hb);
rxn2: OF_Hb -> IF_Hb; vol*(k2_f*OF_Hb - k2_r*IF_Hb);
rxn3: IF_Hb + S_in -> IF_Hb_Sb; vol*(k3_f*IF_Hb*S_in - k3_r*IF_Hb_Sb);
rxn4: IF_Hb_Sb -> IF_Sb + H_in; vol*(k4_f*IF_Hb_Sb - k4_r*IF_Sb*H_in);
rxn5: IF_Sb -> OF_Sb; vol*(k5_f*IF_Sb - k5_r*OF_Sb);
rxn6: OF_Sb -> OF + $S_out; vol*(k6_f*OF_Sb - k6_r*OF*S_out);

rxn7: OF_Sb + $H_out -> OF_Hb_Sb; vol*(k7_f*OF_Sb*H_out - k7_r*OF_Hb_Sb);
rxn8: OF_Hb_Sb -> OF_Hb + $S_out; vol*(k8_f*OF_Hb_Sb - k8_r*OF_Hb*S_out);


// Species initializations:
H_out = 1e-7;
H_in = 1e-7;
S_out = 1e-3;
S_in = 1e-3;

OF = 1.7e-7;
OF_Hb = 0;
OF_Sb = 0;
OF_Hb_Sb = 0;

IF_Hb = 0;
IF_Sb = 0;
IF_Hb_Sb = 0;

H_out has substance_per_volume;
H_in has substance_per_volume;
S_out has substance_per_volume;
S_in has substance_per_volume;

OF has substance_per_volume;
OF_Hb has substance_per_volume;
OF_Sb has substance_per_volume;
OF_Hb_Sb has substance_per_volume;

IF_Hb has substance_per_volume;
IF_Sb has substance_per_volume;
IF_Hb_Sb has substance_per_volume;


// Compartment initializations:
vol = 0.0001;
vol has volume;

// Rate constant initializations:
k1_f = 1e10;
k1_r = 1e3;
k2_f = 1e2;
k2_r = 1e2;
k3_f = 1e7;
k3_r = 1e3;
k4_f = 1e3;
k4_r = 1e10;
k5_f = 1e2;
k5_r = 1e2;

// cycle constraint for cycle 1
k6_f = 1e3;
k6_r := (k1_f*k2_f*k3_f*k4_f*k5_f*k6_f)/(k1_r*k2_r*k3_r*k4_r*k5_r);  // 1e7;

// cycle constraint for cycle 2
k7_f = 1e10;
k7_r := (k2_f*k3_f*k4_f*k5_f*k7_f*k8_f)/(k2_r*k3_r*k4_r*k5_r*k8_r); // 1e3;

k8_f = 1e3;
k8_r = 1e7;

// Other declarations:
const vol;
const k1_f, k1_r, k2_f, k2_r, k3_f, k3_r;
const k4_f, k4_r, k5_f, k5_r, k6_f, k6_r;


// output
current := rxn4;

// Unit definitions:
unit substance_per_volume = mole / litre;
unit volume = litre;
unit length = metre;
unit area = metre^2;
unit time_unit = second;
unit substance = mole;
unit extent = mole;

// Display Names:
time_unit is "time";
end
